======================================================================
                          Changes in 2.0rc
======================================================================

- Do not inline performance noncritical paths such as init, finalize,
  and memory management functions. It allows faster build and less
  instruction cache misses at runtime.

- Enable operation tracking to avoid unnecessary network flush. See
  configure option --enable-op-tracking.

- Enable datatype cache to reduce MPI derived datatype creation overhead at
  strided operations. See configure option --enable-strided-cache.

- Disable internal assertion when --enable-fast configure option is set.

- Update openpa git repository URL.

- Bug fixes:
  + Unsupported MPI datatype with complexd reduce calls.
  + Compile openpa only when multithread safety is set.


======================================================================
                          Changes in 2.0b1
======================================================================

- Full support of OpenSHMEM 1.4 specification.

- Function inline for all OSHMPI internal routines.

- Caching internal MPI communicators for collective operations with PE
  active set.

- OpenSHMEM multithreading safety support. Internal POSIX mutex-based
  per-object critical sections are enabled to ensure thread-safety when
  using OSHMPI with multithreaded OpenSHMEM program (SHMEM_THREAD_MULTIPLE).
  See --enable-threads configure option.

- Active message support of OpenSHMEM atomic operations. MPI accumulates
  cannot be directly used in OpenSHMEM atomics because MPI does not
  guarantee atomicity between different reduce operations (e.g., add and cswap).
  Therefore, the active message based method is used by default. An MPI
  accumulates based version can be enabled by setting the configure option
  --enable-amo=direct, or setting the OSHMPI_AMO_OPS environment variable
  at runtime (See README).

- Asynchronous progress thread for active message based atomic operations.
  Disabled by default. See --enable-async-thread configure option.
